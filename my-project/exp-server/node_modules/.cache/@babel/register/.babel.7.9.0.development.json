{
  "{\"sourceRoot\":\"/home/user/Desktop/thijs project/reactproject/my-project/exp-server/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/user/Desktop/thijs project/reactproject/my-project/exp-server\",\"filename\":\"/home/user/Desktop/thijs project/reactproject/my-project/exp-server/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/user/Desktop/thijs project/reactproject/my-project/exp-server\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/user/Desktop/thijs project/reactproject/my-project/exp-server/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/user/Desktop/thijs project/reactproject/my-project/exp-server",
      "filename": "/home/user/Desktop/thijs project/reactproject/my-project/exp-server/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/user/Desktop/thijs project/reactproject/my-project/exp-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/user/Desktop/thijs project/reactproject/my-project/exp-server/src/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/user/Desktop/thijs project/reactproject/my-project/exp-server/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/user/Desktop/thijs project/reactproject/my-project/exp-server/src/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Express Server\nvar bodyparser = require('body-parser');\n\nvar app = (0, _express.default)(); //setup express app\n\napp.use(bodyparser.json());\nvar port = process.env.port || 3006; ///////////////////mongodb database connection\n\nvar dburl = 'mongodb+srv://shadia:1988Shadia@cluster0-j5x8m.gcp.mongodb.net/booksapi';\n\n_mongoose.default.connect(dburl, {\n  useNewUrlParser: true\n});\n\n_mongoose.default.set('useNewUrlParser', true); ///to avoid url deprication\n\n\n_mongoose.default.Promise = global.Promise; ///to avoid url deprication\n\napp.use(_express.default.static('public')); //serve files in public folder\n//////////////express routing\n\napp.get('/', function (req, res) {\n  return res.send('Hello World!');\n}); //main route\n\napp.use('/api', require(\"./routes/api\")); //the customers route\n///error handling middleware\n\napp.use(function (err, req, res, next) {\n  console.log(err);\n  res.status(422).send({\n    ERROR: err.message\n  }); //'422' unprocessable error : field required\n}); ///////////////middleware\n// Start Server listen for requests\n\napp.listen({\n  port: port\n}, function () {\n  return console.log(\"Example app listening on port \".concat(port, \"!\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImJvZHlwYXJzZXIiLCJyZXF1aXJlIiwiYXBwIiwidXNlIiwianNvbiIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiZGJ1cmwiLCJtb25nb29zZSIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJzZXQiLCJQcm9taXNlIiwiZ2xvYmFsIiwiZXhwcmVzcyIsInN0YXRpYyIsImdldCIsInJlcSIsInJlcyIsInNlbmQiLCJlcnIiLCJuZXh0IiwiY29uc29sZSIsImxvZyIsInN0YXR1cyIsIkVSUk9SIiwibWVzc2FnZSIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7QUFHQTs7OztBQUpBO0FBS0EsSUFBTUEsVUFBVSxHQUFDQyxPQUFPLENBQUMsYUFBRCxDQUF4Qjs7QUFJQSxJQUFNQyxHQUFHLEdBQUcsdUJBQVosQyxDQUF1Qjs7QUFDdkJBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRSCxVQUFVLENBQUNJLElBQVgsRUFBUjtBQUNBLElBQU1DLElBQUksR0FBQ0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLElBQVosSUFBa0IsSUFBN0IsQyxDQUVBOztBQUNBLElBQU1HLEtBQUssR0FBQyx5RUFBWjs7QUFFQUMsa0JBQVNDLE9BQVQsQ0FBaUJGLEtBQWpCLEVBQXdCO0FBQUVHLEVBQUFBLGVBQWUsRUFBRTtBQUFuQixDQUF4Qjs7QUFDQUYsa0JBQVNHLEdBQVQsQ0FBYSxpQkFBYixFQUFnQyxJQUFoQyxFLENBQXNDOzs7QUFFdENILGtCQUFTSSxPQUFULEdBQWlCQyxNQUFNLENBQUNELE9BQXhCLEMsQ0FBZ0M7O0FBR2hDWCxHQUFHLENBQUNDLEdBQUosQ0FBUVksaUJBQVFDLE1BQVIsQ0FBZSxRQUFmLENBQVIsRSxDQUFpQztBQUdqQzs7QUFHQWQsR0FBRyxDQUFDZSxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNDLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLGNBQVQsQ0FBZDtBQUFBLENBQWIsRSxDQUFxRDs7QUFFckRsQixHQUFHLENBQUNDLEdBQUosQ0FBUSxNQUFSLEVBQWVGLE9BQU8sQ0FBQyxjQUFELENBQXRCLEUsQ0FBd0M7QUFHeEM7O0FBQ0FDLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFVBQUNrQixHQUFELEVBQUtILEdBQUwsRUFBU0MsR0FBVCxFQUFhRyxJQUFiLEVBQW9CO0FBQzFCQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBYUgsR0FBYjtBQUNBRixFQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCTCxJQUFoQixDQUFxQjtBQUFDTSxJQUFBQSxLQUFLLEVBQUVMLEdBQUcsQ0FBQ007QUFBWixHQUFyQixFQUYwQixDQUVpQjtBQUM1QyxDQUhELEUsQ0FLQTtBQUdBOztBQUNBekIsR0FBRyxDQUFDMEIsTUFBSixDQUFXO0FBQUN2QixFQUFBQSxJQUFJLEVBQUpBO0FBQUQsQ0FBWCxFQUFtQjtBQUFBLFNBQU1rQixPQUFPLENBQUNDLEdBQVIseUNBQTZDbkIsSUFBN0MsT0FBTjtBQUFBLENBQW5CIiwic291cmNlUm9vdCI6Ii9ob21lL3VzZXIvRGVza3RvcC90aGlqcyBwcm9qZWN0L3JlYWN0cHJvamVjdC9teS1wcm9qZWN0L2V4cC1zZXJ2ZXIvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEV4cHJlc3MgU2VydmVyXG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcblxuXG5pbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuY29uc3QgYm9keXBhcnNlcj1yZXF1aXJlKCdib2R5LXBhcnNlcicpO1xuXG5cblxuY29uc3QgYXBwID0gZXhwcmVzcygpOyAvL3NldHVwIGV4cHJlc3MgYXBwXG5hcHAudXNlKGJvZHlwYXJzZXIuanNvbigpKTtcbmNvbnN0IHBvcnQ9cHJvY2Vzcy5lbnYucG9ydHx8MzAwNjtcblxuLy8vLy8vLy8vLy8vLy8vLy8vL21vbmdvZGIgZGF0YWJhc2UgY29ubmVjdGlvblxuY29uc3QgZGJ1cmw9J21vbmdvZGIrc3J2Oi8vc2hhZGlhOjE5ODhTaGFkaWFAY2x1c3RlcjAtajV4OG0uZ2NwLm1vbmdvZGIubmV0L2Jvb2tzYXBpJztcblxubW9uZ29vc2UuY29ubmVjdChkYnVybCwgeyB1c2VOZXdVcmxQYXJzZXI6IHRydWUgfSk7XG5tb25nb29zZS5zZXQoJ3VzZU5ld1VybFBhcnNlcicsIHRydWUpOy8vL3RvIGF2b2lkIHVybCBkZXByaWNhdGlvblxuXG5tb25nb29zZS5Qcm9taXNlPWdsb2JhbC5Qcm9taXNlOy8vL3RvIGF2b2lkIHVybCBkZXByaWNhdGlvblxuXG5cbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoJ3B1YmxpYycpKS8vc2VydmUgZmlsZXMgaW4gcHVibGljIGZvbGRlclxuXG5cbi8vLy8vLy8vLy8vLy8vZXhwcmVzcyByb3V0aW5nXG5cblxuYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4gcmVzLnNlbmQoJ0hlbGxvIFdvcmxkIScpKTsvL21haW4gcm91dGVcblxuYXBwLnVzZSgnL2FwaScscmVxdWlyZShcIi4vcm91dGVzL2FwaVwiKSk7Ly90aGUgY3VzdG9tZXJzIHJvdXRlXG5cblxuLy8vZXJyb3IgaGFuZGxpbmcgbWlkZGxld2FyZVxuYXBwLnVzZSgoZXJyLHJlcSxyZXMsbmV4dCk9PntcbiAgY29uc29sZS5sb2cgKGVycik7XG4gIHJlcy5zdGF0dXMoNDIyKS5zZW5kKHtFUlJPUjogZXJyLm1lc3NhZ2V9KTsvLyc0MjInIHVucHJvY2Vzc2FibGUgZXJyb3IgOiBmaWVsZCByZXF1aXJlZFxufSlcblxuLy8vLy8vLy8vLy8vLy8vbWlkZGxld2FyZVxuXG5cbi8vIFN0YXJ0IFNlcnZlciBsaXN0ZW4gZm9yIHJlcXVlc3RzXG5hcHAubGlzdGVuKHtwb3J0fSwgKCkgPT4gY29uc29sZS5sb2coYEV4YW1wbGUgYXBwIGxpc3RlbmluZyBvbiBwb3J0ICR7cG9ydH0hYCkpO1xuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "bodyparser",
        "require",
        "app",
        "use",
        "json",
        "port",
        "process",
        "env",
        "dburl",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "set",
        "Promise",
        "global",
        "express",
        "static",
        "get",
        "req",
        "res",
        "send",
        "err",
        "next",
        "console",
        "log",
        "status",
        "ERROR",
        "message",
        "listen"
      ],
      "mappings": ";;AACA;;AAGA;;;;AAJA;AAKA,IAAMA,UAAU,GAACC,OAAO,CAAC,aAAD,CAAxB;;AAIA,IAAMC,GAAG,GAAG,uBAAZ,C,CAAuB;;AACvBA,GAAG,CAACC,GAAJ,CAAQH,UAAU,CAACI,IAAX,EAAR;AACA,IAAMC,IAAI,GAACC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAkB,IAA7B,C,CAEA;;AACA,IAAMG,KAAK,GAAC,yEAAZ;;AAEAC,kBAASC,OAAT,CAAiBF,KAAjB,EAAwB;AAAEG,EAAAA,eAAe,EAAE;AAAnB,CAAxB;;AACAF,kBAASG,GAAT,CAAa,iBAAb,EAAgC,IAAhC,E,CAAsC;;;AAEtCH,kBAASI,OAAT,GAAiBC,MAAM,CAACD,OAAxB,C,CAAgC;;AAGhCX,GAAG,CAACC,GAAJ,CAAQY,iBAAQC,MAAR,CAAe,QAAf,CAAR,E,CAAiC;AAGjC;;AAGAd,GAAG,CAACe,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACC,IAAJ,CAAS,cAAT,CAAd;AAAA,CAAb,E,CAAqD;;AAErDlB,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAeF,OAAO,CAAC,cAAD,CAAtB,E,CAAwC;AAGxC;;AACAC,GAAG,CAACC,GAAJ,CAAQ,UAACkB,GAAD,EAAKH,GAAL,EAASC,GAAT,EAAaG,IAAb,EAAoB;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAaH,GAAb;AACAF,EAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AAACM,IAAAA,KAAK,EAAEL,GAAG,CAACM;AAAZ,GAArB,EAF0B,CAEiB;AAC5C,CAHD,E,CAKA;AAGA;;AACAzB,GAAG,CAAC0B,MAAJ,CAAW;AAACvB,EAAAA,IAAI,EAAJA;AAAD,CAAX,EAAmB;AAAA,SAAMkB,OAAO,CAACC,GAAR,yCAA6CnB,IAA7C,OAAN;AAAA,CAAnB",
      "sourceRoot": "/home/user/Desktop/thijs project/reactproject/my-project/exp-server/src/",
      "sourcesContent": [
        "// Express Server\nimport express from 'express';\n\n\nimport mongoose from 'mongoose';\nconst bodyparser=require('body-parser');\n\n\n\nconst app = express(); //setup express app\napp.use(bodyparser.json());\nconst port=process.env.port||3006;\n\n///////////////////mongodb database connection\nconst dburl='mongodb+srv://shadia:1988Shadia@cluster0-j5x8m.gcp.mongodb.net/booksapi';\n\nmongoose.connect(dburl, { useNewUrlParser: true });\nmongoose.set('useNewUrlParser', true);///to avoid url deprication\n\nmongoose.Promise=global.Promise;///to avoid url deprication\n\n\napp.use(express.static('public'))//serve files in public folder\n\n\n//////////////express routing\n\n\napp.get('/', (req, res) => res.send('Hello World!'));//main route\n\napp.use('/api',require(\"./routes/api\"));//the customers route\n\n\n///error handling middleware\napp.use((err,req,res,next)=>{\n  console.log (err);\n  res.status(422).send({ERROR: err.message});//'422' unprocessable error : field required\n})\n\n///////////////middleware\n\n\n// Start Server listen for requests\napp.listen({port}, () => console.log(`Example app listening on port ${port}!`));\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585157874666
  }
}